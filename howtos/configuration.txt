This file lists all configuration parameters and their options.
If the config file is missing, the main application can be run with --create-config
This will create the default config file and exit the application.
This way there is time to adapt the parameters before application startup.
Those affecting the root IRI cannot be changed afterwards. Details see root_container.txt.


#Parameter=default value
JsonLdCachedProfileValidityInMs=86400000
The time in ms a cached JSON-LD profile is regarded up to date. If elapsed, the registry performs an update-download.
 
ShouldAppendStackTraceToErrorMessages=false
Should stack traces be appended to http error messages. Of great help during debugging.

DataBasePath=./production_db
The path where the database gets stored

EnableMandatorySlugInContainerPost=false
Is the Slug header mandatory when creating containers via POST

EnableValidation=true
Is validation of Annotation and Container during POST active

WebClientFolder=./webcontent
The folder where the web client is located

JsonLdProfileFolder=./profiles
The folder where the JSON-LD profiles are locally cached

SparqlReadIp=*
The IP of the SPARQL read-only endpoint. Either a specific one (including localhost) or * for all

EnableContentNegotiation=true
Is content negotiation active

SparqlReadPort=3330
The port of the SPARQL read-only endpoint. Use -1 to disable this endpoint.

FallbackValidation=true
Is fallback validation active. When posting elements in a format that has no specific validator implementation,
the data is converted to JSON-LD and validated in this format before it gets posted.

Hostname=localhost
The hostname under which this server can be reached. It has to be translated to the IP set in WapIp by DNS.
This setting has influence on the root IRI and cannot be changed after a database has been created.
See root_container.txt

CorsAllowedOriginsPath=./cors_allowed_origins.conf
The file where CORS allowed origins are stored. If the file does not exist
on application startup, it is autocreated using the default setting to allow CORS for all origins.
Details see cors.txt

WapIp=*
The IP of the WAP endpoint. Either a specific one (including localhost) or * for all

EnableMandatoryLabelInContainers=false
Are labels mandatory when creating containers via POST

JavaDocFolder=./doc
The folder where the javadoc is stored

EnableHttps=false
Is HTTPS active. HTTPS has additional dependencies, see ssl.txt.
This setting has influence on the root IRI and cannot be changed after a database has been created.
See root_container.txt

JsonLdFrameFolder=./profiles
The folder where the JSON-LD frames are stored.

JsonLdValidator_SchemaFolder=./schemas
The folder where the JSON-LD schemas are stored

SimpleFormatters=NTRIPLES*application/n-triples|RDF_JSON*application/rdf+json
The string configuring simple formats. Details see formats.txt

SparqlWritePort=3331
The port of the SPARQL read-write endpoint. Use -1 to disable this endpoint.

SparqlWriteIp=localhost
The IP of the SPARQL read-write endpoint. Either a specific one (including localhost) or * for all

PageSize=20
The count of annotations that lie within one PAGE in responses

MultipleAnnotationPost=true
Is posting multiple annotations in one request possible

WapPort=80
The port under which the WAP service is reachable. This port is used for HTTP and HTTPS service.
When 80 is set and a http service is used, the port is omitted. The same applies to HTTPS and port 443.
This setting has influence on the root IRI and cannot be changed after a database has been created.
See root_container.txt

RdfBackendImplementation=jena
The qualifier of the used RDF backend implementation. The default backend is 'jena'. In addition,
a second backend 'jena+jdbc' is supported storing sequence information to a relational database. This
gets relevant from the performance perspective, if you plan to use very large annotation container 
(more than 10.000 elements). If 'jena+jdbc' is configured, you to add JDBC connection information to
the configuration. For the sake of simplicity, you may just copy and uncomment the following configuration: 

#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:file:./sequence_db.h2;DB_CLOSE_DELAY=-1;MVCC=TRUE
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update
